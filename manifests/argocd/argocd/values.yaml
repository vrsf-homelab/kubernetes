global:
  domain: argocd.vrsf.in
  revisionHistoryLimit: 5

  image:
    repository: vertisan/argocd
    tag: 2.11.3-custom.0

  logging:
    format: json

  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0

  affinity:
    nodeAffinity:
      type: hard
      matchExpressions:
        - key: node.kubernetes.io/server-type
          operator: In
          values:
            - crimson

crds:
  install: true
  keep: false

configs:
  cm:
    kustomize.buildOptions: "--enable-helm --enable-alpha-plugins --enable-exec"
    users.anonymous.enabled: "false"
    timeout.reconciliation: 15s
    helm.valuesFileSchemes: >-
      secrets+gpg-import, secrets+gpg-import-kubernetes,
      secrets+age-import, secrets+age-import-kubernetes,
      secrets,secrets+literal,
      http,https

controller:
  resources:
    requests:
      cpu: 500m
      memory: 768Mi
    limits:
      cpu: 1500m
      memory: 2Gi
  pdb:
    maxUnavailable: 0
  metrics: &metricsMonitor
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus

dex:
  metrics: *metricsMonitor

repoServer:
  metrics: *metricsMonitor
  envFrom:
    - secretRef:
        name: aws-credentials

server:
  metrics: *metricsMonitor
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    tls: true
  pdb:
    enabled: true
    maxUnavailable: 0

redis:
  metrics: *metricsMonitor

applicationSet:
  metrics: *metricsMonitor

notifications:
  enabled: false
