apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared-controller
  labels:
    app.kubernetes.io/name: cloudflared
    app.kubernetes.io/component: controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflared
      app.kubernetes.io/component: controller
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflared
        app.kubernetes.io/component: controller
    spec:
      containers:
        - name: controller
          image: cloudflare/cloudflared:2024.6.0
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
            - name: cert
              mountPath: /etc/cloudflared/cert
              readOnly: true
          resources:
            requests:
              memory: 48Mi
              cpu: 5m
            limits:
              memory: 64Mi
              cpu: 10m
      volumes:
        - name: creds
          secret:
            secretName: cloudflared-credentials
        - name: cert
          secret:
            secretName: cloudflared-certificate
        - name: config
          secret:
            secretName: tunnel-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: cloudflared
                  app.kubernetes.io/component: controller
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: cloudflared
              app.kubernetes.io/component: controller
