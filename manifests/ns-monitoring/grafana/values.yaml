podDisruptionBudget:
  maxUnavailable: 50%
  apiVersion: policy/v1

resources:
  requests:
    cpu: 20m
    memory: 256Mi
  limits:
    cpu: 50m
    memory: 512Mi

serviceMonitor:
  enabled: true
  labels:
    release: prometheus

grafana.ini:
  server:
    root_url: https://grafana.vrsf.in

ingress:
  enabled: true
  ingressClassName: nginx
  hosts:
    - grafana.vrsf.in
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.vrsf.in

persistence:
  enabled: true
  storageClassName: nfs-csi-retain
  size: 20Gi
  accessModes:
    - ReadWriteMany

admin:
  existingSecret: grafana-admin-credentials
  userKey: adminUser
  passwordKey: adminPassword

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist

topologySpreadConstraints:
  - labelSelector:
      matchLabels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
    topologyKey: topology.kubernetes.io/zone
    maxSkew: 1
    whenUnsatisfiable: ScheduleAnyway
  - labelSelector:
      matchLabels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
    topologyKey: kubernetes.io/hostname
    maxSkew: 1
    whenUnsatisfiable: ScheduleAnyway
